import { makeAutoObservable } from 'mobx';import { CategoryType } from 'store/Type/models';export class CategoriesStore {	categories: CategoryType[] = [		{ value: 1, label: 'Food Store' },		{ value: 2, label: 'Clothing Shop' },		{ value: 3, label: 'Communal services' },		{ value: 4, label: 'Entertainment' }, // развлечения		{ value: 5, label: 'Auto services' },		{ value: 6, label: 'Gifts' },		{ value: 7, label: 'Cigarettes and alcohol ' },	];	constructor() {		makeAutoObservable(this);	}	addСategory(category: CategoryType): void {		this.categories.push(category);		return;	}	removeСategory(idCategory: number): void {		const currentCategory = this.categories.findIndex((category) => category.value === idCategory);		this.categories.splice(currentCategory, 1);		return;	}	changeСategory(currentCategory: CategoryType): void {		this.categories.find((category) => {			if (category.value === currentCategory.value) {				category.label = currentCategory.label;			}		});		return;	}	setСategory(categories: CategoryType[]): void {		this.categories = categories;		return;	}}export default new CategoriesStore();