import i18n from 'i18next';import { action, makeObservable, observable } from 'mobx';import { LoadingEnum, NotificationType } from 'store/Type/models';export class NotificationStore {	isLoading: LoadingEnum = LoadingEnum.initial;	notification: NotificationType | undefined = undefined;	switcherNotification = false;	serverResponse: string | undefined = undefined;	setIsLoading = (isLoading: LoadingEnum): void => {		this.isLoading = isLoading;	};	setNotification = (		notification: NotificationType | undefined,		switcherNotification: boolean,		serverResponse: string | undefined = i18n.t('THE_OPERATION_WAS_SUCCESSFUL'),	): void => {		this.switcherNotification = switcherNotification;		this.notification = notification;		this.serverResponse = serverResponse;	};	constructor() {		makeObservable(this, {			isLoading: observable,			notification: observable,			switcherNotification: observable,			serverResponse: observable,			setIsLoading: action,			setNotification: action,		});	}}export default new NotificationStore();