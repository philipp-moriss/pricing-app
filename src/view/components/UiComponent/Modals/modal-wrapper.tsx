import { Button } from '../Button/Button';import styles from './modal-wrapper.module.scss';import React, { useEffect } from 'react';import ReactDOM from 'react-dom';export const ModalWrapper: React.FC<DisconnectAllModalPropsType> = ({	callBack,	closeCallback,	children,}) => {	useEffect(() => {		document.body.style.overflow = 'hidden';		return () => {			document.body.style.overflow = 'auto';		};	}, []);	const PortalNode = document.getElementById('portal');	return PortalNode		? ReactDOM.createPortal(				<div className={styles['modal-wrapper']}>					<div className={styles['modal-overflow']} onClick={closeCallback}></div>					<div className={styles['modal-inner']}>						<div className={styles['modal-content-container']}>{children}</div>						<div className={styles['modal-content-button-box']}>							<Button onClick={callBack} textBtn={'Save'} />							<Button onClick={closeCallback} textBtn={'Close'} />						</div>					</div>				</div>,				PortalNode,		  )		: null;};interface DisconnectAllModalPropsType {	closeCallback: () => void;	callBack: () => void;	children: React.ReactNode;}