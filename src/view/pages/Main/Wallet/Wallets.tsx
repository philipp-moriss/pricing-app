import React, { useState } from 'react';import { useTranslation } from 'react-i18next';import WalletInstance from 'store/WalletStore/wallet-store';import { Button } from 'view/components/UiComponent/Button/Button';import { CustomInput } from 'view/components/UiComponent/CustomInput/CustomInput';import { ModalWrapper } from 'view/components/UiComponent/ModalWrapper/modal-wrapper';import { Title } from 'view/components/UiComponent/Title/Title';import { Wallet } from 'view/pages/Main/Wallet/Wallet/Wallet';import styles from './Wallets.module.scss';type WalletType = { name: string; balance: number; currency: string; _id: string; icon?: string };export const Wallets = (): React.ReactElement => {	const { wallet, getWallet } = WalletInstance;	const [addWalletModal, setAddWalletModal] = useState(false);	const [newWallet, setNewWallet] = useState<WalletType>({		_id: JSON.parse(localStorage.getItem('id') as string),		icon: '',		name: '',		balance: 0,		currency: '',	});	const { t } = useTranslation();	const addWallet = (): void => {		const userId = JSON.parse(localStorage.getItem('id') as string);		WalletInstance.addWallet(newWallet, userId).then((r) => alert('ok'));	};	const addWalletHandler = (value: string | number, key: string): void => {		setNewWallet((prevState) => {			return {				...prevState,				[key]: value,			};		});	};	return (		<>			<div className={styles['wallets']}>				<Button onClick={(): void => setAddWalletModal(true)} textBtn={'create wallet'} />				{wallet &&					wallet.map((i) => {						return (							<Wallet								key={i._id}								name={i.name}								balance={i.balance}								currency={i.currency}								totalSpends={i.totalSpends}							/>						);					})}			</div>			{addWalletModal && (				<ModalWrapper callBackSave={addWallet} closeCallback={(): void => setAddWalletModal(false)}>					<Title size={'h1'}>Create new Wallet</Title>					<CustomInput						type={'text'}						placeholder={'Name'}						value={newWallet?.name}						onChange={(e): void => addWalletHandler(e.currentTarget.value, 'name')}					/>					<CustomInput						type={'text'}						placeholder={'Currency'}						value={newWallet?.currency}						onChange={(e): void => addWalletHandler(e.currentTarget.value, 'currency')}					/>					<CustomInput						type={'text'}						placeholder={'Balance'}						value={newWallet?.balance}						onChange={(e): void => addWalletHandler(e.currentTarget.value, 'balance')}					/>				</ModalWrapper>			)}		</>	);};// here will map of wallets